<!-- Frontend Code -->
<!DOCTYPE html>
<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id="root"></div>
    <script type="text/babel">
        const { useState, useEffect } = React;

        const fetchData = async () => {
            const response = await fetch('/api/books');
            const data = await response.json();
            return data;
        };

        const Greeting = () => <h1>Hello!</h1>;

        const Book = ({ id, title, onSelect }) => (
            <li><a href="#" onClick={() => onSelect(id)}>{title}</a></li>
        );

        const BookList = ({ books, onSelect }) => (
            <ul className="book-list">
                {books.map(book => (
                    <Book key={book._id} id={book._id} title={book.title} onSelect={onSelect} />
                ))}
            </ul>
        );

        const BookDetail = ({ book, onClear, onChange, onSave, onDelete, onCreate }) => {
            const handleInputChange = (field, value) => {
                onChange(book?._id, field, value);
            };

            return (
                <div>
                 
                    <form>
                        <div>
                            <label>ID:</label>
                            <input type="text" value={book?._id || ''} readOnly />
                        </div>
                        <div>
                            <label>Title:</label>
                            <input type="text" value={book?.title || ''} onChange={(e) => handleInputChange('title', e.target.value)} />
                        </div>
                        <div>
                            <label>Type:</label>
                            <input type="text" value={book?.type || ''} onChange={(e) => handleInputChange('type', e.target.value)} />
                        </div>
                        <button type="button" onClick={onClear}>Clear</button>
                        <button type="button" onClick={() => onSave(book)}>Save</button>
                        {book?._id && <button type="button" onClick={() => onDelete(book._id)}>Delete</button>}
                        <button type="button" onClick={onCreate}>Create New</button>
                    </form>
                </div>
            );
        };

        const App = () => {
            const [selectedBook, setSelectedBook] = useState(null);
            const [bookList, setBookList] = useState([]);

            useEffect(() => {
                const loadBooks = async () => {
                    const books = await fetchData();
                    setBookList(books);
                };
                loadBooks();
            }, []);

            const handleSelectBook = (id) => {
                const book = bookList.find(b => b._id === id);
                setSelectedBook(book);
            };

            const handleClear = () => setSelectedBook({ title: '', type: '' });

            const handleChange = (id, field, value) => {
                if (id) {
                    const updatedBooks = bookList.map(book => {
                        if (book._id === id) {
                            return { ...book, [field]: value };
                        }
                        return book;
                    });
                    setBookList(updatedBooks);

                    if (selectedBook && selectedBook._id === id) {
                        setSelectedBook({ ...selectedBook, [field]: value });
                    }
                } else {
                    setSelectedBook({ ...selectedBook, [field]: value });
                }
            };

            const handleSave = async (book) => {
                if (book?.title) {
                    if (book._id) {
                       
                        await fetch(`/api/books/${book._id}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(book)
                        });
                    } else {
                    
                        const response = await fetch('/api/books', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(book)
                        });
                        const createdBook = await response.json();
                        setBookList([...bookList, createdBook]);
                    }
                   
                    const updatedBooks = await fetchData();
                    setBookList(updatedBooks);
                    setSelectedBook(null);
                }
            };

            const handleDelete = async (id) => {
                await fetch(`/api/books/${id}`, {
                    method: 'DELETE'
                });
         
                const updatedBooks = await fetchData();
                setBookList(updatedBooks);
                setSelectedBook(null);
            };

            const handleCreate = () => {
                setSelectedBook(null);
            };

            return (
                <> 
                    <Greeting />
                    <h2>Books List</h2>
                    <BookList books={bookList} onSelect={handleSelectBook} />
                    <BookDetail book={selectedBook} onClear={handleClear} onChange={handleChange} onSave={handleSave} onDelete={handleDelete} onCreate={handleCreate} />
                </>
            );
        };

        const root = ReactDOM.createRoot(document.getElementById("root"));
        root.render(
            <React.StrictMode>
                <App />
            </React.StrictMode>
        );
    </script>
</body>
</html>
