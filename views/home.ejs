<!DOCTYPE html>
<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <div id="root"></div>
    <script type="text/babel">
        const items = JSON.parse('<%- items %>');

        const Greeting = (props) => {
            const isLoggedIn = props.isLoggedIn;
            return (
                <div>
                    <h1>Hello!</h1>
                </div>
            );
        };

        const Welcome = (props) => {
            return <h1>Hello, {props.name}</h1>;
        };

        class WelcomeClass extends React.Component {
            render() {
                return <h1>Hello, {this.props.name}</h1>;
            }
        }

        const Item = ({ id, name, onSelect }) => {
            return <li><a href="#" onClick={() => onSelect(id)}>{name}</a></li>;
        };

        const List = ({ items, onSelect }) => {
            return (
                <ul className="item-list">
                    {items.map(item => <Item key={item._id} id={item._id} name={item.title} onSelect={onSelect} />)}
                </ul>
            );
        };

        const Detail = ({ item, onClear, onChange }) => {
            if (!item) return null;

        return (
        <div>
            <h2>Item Details</h2>
            <form>
        <div>
    <label>ID:</label>
        <input type="text" value={item._id} readOnly />
        </div>
        <div>
            <label>Title:</label>
            <input type="text" value={item.title} onChange={(e) => onChange(item._id, 'title', e.target.value)} />
        </div>
        <button type="button" onClick={onClear}>Clear</button>
        </form>
                </div>
            );
        };

        const App = () => {
            const [selectedItem, setSelectedItem] = React.useState(null);
            const [itemList, setItemList] = React.useState(items);

            const handleSelectItem = (id) => {
                const item = itemList.find(i => i._id === id);
                setSelectedItem(item);
            };

            const handleClear = () => {
                setSelectedItem(null);
            };

            const handleChange = (id, field, value) => {
                const updatedItems = itemList.map(item => {
                    if (item._id === id) {
                        return { ...item, [field]: value };
                    }
                    return item;
                });
                setItemList(updatedItems);

                if (selectedItem && selectedItem._id === id) {
                    setSelectedItem({ ...selectedItem, [field]: value });
                }
            };

            return (
                <> 
                    <Greeting isLoggedIn={true} />
                    <h2>Items List</h2>
                    <List items={itemList} onSelect={handleSelectItem} />
                    <Detail item={selectedItem} onClear={handleClear} onChange={handleChange} />
                </>
            );
        };

        const root = ReactDOM.createRoot(document.getElementById("root"));
        root.render(
          <React.StrictMode>
            <App />
          </React.StrictMode>
        );
    </script>
</body>
</html>
